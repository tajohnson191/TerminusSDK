buildscript {
    ext{
        gsonVersion = "2.8.2"
    }
}

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'maven-publish'
}

dependencies {
    implementation('com.fasterxml.jackson.core:jackson-databind:2.13.1')
    implementation "com.google.code.gson:gson:${gsonVersion}"
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation "com.squareup.okhttp3:okhttp:4.9.3"
}

ext {
    projectName = "TerminusSDK"
    gradleGroupId = "com.example"
    artifactoryRepo = "terminus"
    projectVersion = [
            major: 1,
            minor: 1,
            patch: 1,
            build: Integer.parseInt(System.getenv("BUILD_NUMBER") ?: "0")
    ]
    projectVersionName = "${projectVersion.major}.${projectVersion.minor}.${projectVersion.patch}"
    projectVersionCode = projectVersion.major * 10000000 + projectVersion.minor * 100000 + projectVersion.patch * 1000 + projectVersion.build
}

android {
    compileSdk 31

    defaultConfig {
        minSdk 23
        targetSdk 31
        versionCode projectVersionCode
        versionName projectVersionName
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        snapshot {
            initWith release
            debuggable true
            versionNameSuffix ".${projectVersion.build}-SNAPSHOT"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.majorVersion
    }
    libraryVariants.all { variant ->
        variant.outputs.all {
            if (variant.name.contains("snapshot")) {
                outputFileName = "${projectName}-${projectVersionName}-${projectVersion.build}-SNAPSHOT.aar"
            } else {
                outputFileName = "${projectName}-${projectVersionName}.aar"
            }
        }
    }
}

apply from: '../scripts/createpath.gradle'
apply from: '../scripts/publish.gradle'